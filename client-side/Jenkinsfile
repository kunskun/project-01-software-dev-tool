pipeline {
    agent any

    stages {
        stage('Pull code') {
            steps {
                checkout scm
            }
        }
        stage('Download dependency') {
            steps {
                sh 'cd client-side && yarn install'
            }
        }
        stage('Run Unit test') {
            steps {
                sh 'cd client-side && yarn run test'
            }
        }
        stage('Unit Test Report'){
            steps {
                clover(cloverReportDir: 'client-side/coverage', cloverReportFileName: 'clover.xml',
                    healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80],
                    unhealthyTarget: [methodCoverage: 40, conditionalCoverage: 50, statementCoverage: 50],
                    failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]
                )
            }
        }
        stage('Run Component test') {
            steps {
                echo 'run component test'
            }
        }
        // stage('Component Test Report'){
        //     steps {
        //         clover(cloverReportDir: 'client-side/coverage', cloverReportFileName: 'clover.xml',
        //             healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80],
        //             unhealthyTarget: [methodCoverage: 40, conditionalCoverage: 50, statementCoverage: 50],
        //             failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]
        //         )
        //     }
        // }
        stage('Graphql test') {
            steps {
                echo 'test graphql api'
            }
        }
        stage('Build') {
            steps {
                sh 'cd client-side && yarn build'
            }
        }
        stage('Deployment') {
            steps {
                echo 'Deploy client-side'
            }
        }
        stage('Run E2E test') {
            steps {
                echo 'E2E command Test'
            }
        }
    }
}